import { execSync } from "child_process"
import { cli } from "../src/app"
import { readFileSync } from "fs"
import {
  ttDir,
  cliArgs,
  dev_ttDir,
  noop,
  production,
  ttFiles,
  stateFile,
  historyFile,
} from "../src/util"
import rm from "rimraf"

const testDir = `${dev_ttDir}-cli.test`
const testState = `${testDir}/${stateFile}`
const testHistory = `${testDir}/${historyFile}`

afterAll(() => {
  execSync(`mkdir -p ${testDir}`)
  ttFiles.forEach(file => {
    execSync(`echo { "autoGenerated": 0 } > ${testDir}/${file}`)
  })
})

describe("tt init", () => {
  test("creates .tt and files with default {} data", () => {
    rm.sync(testDir)
    cli(cliArgs("init"), { ttRoot: testDir })

    ttFiles.forEach(file => {
      const result = readFileSync(`${testDir}/${file}`, "utf-8")
      const parsed = JSON.parse(result)
      const expected = {}
      expect(parsed).toEqual(expected)
    })
  })
})

describe.only("tt new", () => {
  test("tt new", () => {
    rm.sync(testDir)
    cli(cliArgs("new"), { ttRoot: testDir })

    const result = readFileSync(testState, "utf-8")
    const parsed = JSON.parse(result)
    const expected = {
      name: expect.any(String),
      start: expect.any(Number),
    }
    expect(parsed).toEqual(expected)
  })
})
